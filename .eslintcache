[{"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\index.js":"1","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\App.js":"2","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\reportWebVitals.js":"3","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\container\\WeatherApp.jsx":"4","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\chart\\Chart.jsx":"6","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\citytemp\\CityTemp.jsx":"7","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Search\\Search.jsx":"8","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\helper\\helpers.js":"9","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\loading\\Loading.jsx":"10","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\imgs\\imgs.js":"11","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\weektemp\\WeekTemp.jsx":"12","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\helper\\TableHelper.jsx":"13"},{"size":500,"mtime":1612039871283,"results":"14","hashOfConfig":"15"},{"size":200,"mtime":1613130001814,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1612039871283,"results":"17","hashOfConfig":"15"},{"size":3746,"mtime":1613133469039,"results":"18","hashOfConfig":"15"},{"size":997,"mtime":1613074332862,"results":"19","hashOfConfig":"15"},{"size":627,"mtime":1613130135847,"results":"20","hashOfConfig":"15"},{"size":1620,"mtime":1613134778495,"results":"21","hashOfConfig":"15"},{"size":826,"mtime":1613081794595,"results":"22","hashOfConfig":"15"},{"size":129,"mtime":1613079795020,"results":"23","hashOfConfig":"15"},{"size":574,"mtime":1613077278255,"results":"24","hashOfConfig":"15"},{"size":457,"mtime":1613079243443,"results":"25","hashOfConfig":"15"},{"size":1027,"mtime":1613134104258,"results":"26","hashOfConfig":"15"},{"size":912,"mtime":1613134123815,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"oin49t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\index.js",[],["56","57"],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\App.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\reportWebVitals.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\container\\WeatherApp.jsx",["58"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as BootStrap from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../components/Header/Header'\r\nimport City from \"../components/citytemp/CityTemp\"\r\nimport Chart from \"../components/chart/Chart\";\r\nimport Search from \"../components/Search/Search\";\r\nimport Loading from \"../components/loading/Loading\";\r\nimport WeekTemp from \"../components/weektemp/WeekTemp\";\r\n\r\n\r\n\r\nexport default function WeatherApp() {\r\n\r\n   \r\n    const [WeatherData, setWeatherData] = useState({ loading:false, data:{}})\r\n    const [error, seterror] = useState(null)\r\n    const [userCountry, setUserCountry] = useState(\"\")\r\n\r\n    const state = {\r\n      labels: [\"now\", time(1), time(2),\r\n      time(3), time(4),time(5)],\r\n      datasets: [\r\n        {\r\n        \r\n          label: 'temperture',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: 'rgba(75,192,192,1)',\r\n          borderColor: 'rgba(55,100,25,1)',\r\n          borderWidth: 1,\r\n          data: [10,5,12,33,55]\r\n        }\r\n      ]\r\n    }\r\n\r\n    const [URL, setURL] = useState(\"https://www.metaweather.com/api/location/search/?query=Baghdad\")\r\n    const [WeatherURL, setWeatherURL] = useState(\"\")\r\n    \r\n    const  fetching =  (URL) =>\r\n        fetch(URL)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n              return result\r\n          },\r\n          (error) => {\r\n            seterror(error);\r\n          }\r\n      );\r\n\r\n         \r\n      useEffect(() => {\r\n          fetching(URL)\r\n         .then((result) => {\r\n                            setWeatherURL(\"https://www.metaweather.com/api/location/\"+result[0].woeid)\r\n                          })\r\n       }, [URL]);\r\n\r\n\r\n       useEffect(() => {\r\n           fetching(WeatherURL)\r\n           .then((result)=> setWeatherData({loading:true, data:result})) \r\n       }, [ WeatherURL]);\r\n\r\n\r\n\r\n       const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n      \r\n          setURL(\"https://www.metaweather.com/api/location/search/?query=\"+userCountry)\r\n          setUserCountry(\"\")\r\n          \r\n        \r\n       }\r\n\r\n\r\n       const handleChange =(e)=> setUserCountry(e.target.value)\r\n       \r\n\r\n      \r\n\r\n    return (\r\n    <React.Fragment>\r\n        {\r\n      (WeatherData.data) && (WeatherData.loading) \r\n        \r\n        ?<BootStrap.Container fluid  >\r\n            <BootStrap.Row className=\"justify-content-sm-center bg-info p-4 text-light\">\r\n                <Header todayData={WeatherData.data.consolidated_weather[0]} />\r\n            </BootStrap.Row>\r\n\r\n            <BootStrap.Row  className=\"justify-content-sm-center  p-1 text-light\">\r\n                <Search handleSubmit={handleSubmit} handleChange={handleChange} inputValue={userCountry} />\r\n            </BootStrap.Row>\r\n              \r\n\r\n            <BootStrap.Container>\r\n              <BootStrap.Row className=\"mx-auto \">\r\n                    <City\r\n                    location={WeatherData.data.title}\r\n                    data={WeatherData.data.consolidated_weather[0] }\r\n                    sunRise={WeatherData.data.sun_rise }\r\n                    sunSet={WeatherData.data.sun_set }\r\n                    />\r\n                    <Chart data={state} />\r\n                </BootStrap.Row>\r\n\r\n\r\n                <BootStrap.Row className=\"mt-5 \">\r\n                  <WeekTemp data={WeatherData.data} />\r\n                </BootStrap.Row>\r\n\r\n            </BootStrap.Container>\r\n\r\n\r\n\r\n\r\n        </BootStrap.Container>\r\n     \r\n        : <Loading />\r\n      }\r\n    </React.Fragment>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet today = new Date();\r\n\r\nlet now =today.getHours();\r\n\r\nconst time= (afterHour) => {\r\n  \r\n    return now + afterHour+\":00\"\r\n}\r\n\r\n\r\n","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\chart\\Chart.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\citytemp\\CityTemp.jsx",["59"],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Search\\Search.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\helper\\helpers.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\loading\\Loading.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\imgs\\imgs.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\weektemp\\WeekTemp.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\helper\\TableHelper.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":18,"column":12,"nodeType":"66","messageId":"67","endLine":18,"endColumn":17},{"ruleId":"64","severity":1,"message":"68","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Datetime' is defined but never used.","no-global-assign","no-unsafe-negation"]