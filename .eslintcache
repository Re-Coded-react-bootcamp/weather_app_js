[{"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\index.js":"1","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\App.js":"2","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\reportWebVitals.js":"3","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\container\\WeatherApp.jsx":"4","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\chart\\Chart.jsx":"6","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\citytemp\\CityTemp.jsx":"7"},{"size":500,"mtime":1612039871283,"results":"8","hashOfConfig":"9"},{"size":200,"mtime":1612981233468,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612039871283,"results":"11","hashOfConfig":"9"},{"size":2085,"mtime":1612983345673,"results":"12","hashOfConfig":"9"},{"size":653,"mtime":1612981233474,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1612820492302,"results":"14","hashOfConfig":"9"},{"size":758,"mtime":1612984033864,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"oin49t",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\index.js",[],["33","34"],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\App.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\reportWebVitals.js",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\container\\WeatherApp.jsx",["35"],"\r\n\r\nimport Header from '../components/Header/Header'\r\nimport React, { useState } from 'react';\r\nimport City from \"../components/citytemp/CityTemp\"\r\nimport logo from \"../logo.svg\";\r\n\r\nimport {Line} from 'react-chartjs-2';\r\nlet today = new Date();\r\nlet date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\nlet now =today.getHours();\r\n\r\nconst time= (afterHour) => {\r\n  \r\n    return now + afterHour+\":00\"\r\n}\r\n\r\nconst state = {\r\n  labels: [\"now\", time(1), time(2),\r\n  time(3), time(4),time(5)],\r\n  datasets: [\r\n    {\r\n    \r\n      label: 'temperture',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,1)',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 1,\r\n      data: [10,5,12,33,55]\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n\r\n/* space  */\r\n\r\nexport default function WeatherApp() {\r\n    const [HeaderData, setHeaderData]= useState( {\"rain\":\"none\", \"humidity\": 20, \"wind\": 26, \"pressure\":85, \"dewPoint\": 25.5, \"UVindex\":66, \"visibility\":35} )\r\n\r\n   \r\n    return (\r\n        <div className=\"\">\r\n            <Header     \r\n              rain={HeaderData.rain} \r\n              humidity={HeaderData.humidity} \r\n              wind={HeaderData.wind} \r\n              pressure={HeaderData.pressure} \r\n              dewPoint={HeaderData.dewPoint}\r\n              UVindex={HeaderData.UVindex}\r\n              visibility={HeaderData.visibility}\r\n            />\r\n\r\n            <City\r\n            location={\"Erbil\"}\r\n            img={logo}\r\n            date={date}\r\n            overcast={\"25C\"}\r\n            feel ={ \"cold\"}\r\n            />\r\n\r\n\r\n            <div className=\"chart\">\r\n              <Line\r\n                data={state}\r\n                options={{\r\n                  title:{\r\n                    display:true,\r\n                    text:'Average Rainfall per month',\r\n                    fontSize:20\r\n                  },\r\n                  legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                  }\r\n                }}\r\n                />\r\n              </div>\r\n\r\n\r\n         </div>\r\n\r\n        \r\n    )\r\n}\r\n","C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\chart\\Chart.jsx",[],"C:\\Users\\A\\bootcamp\\assignments\\WeatherApp\\weather_app_js\\src\\components\\citytemp\\CityTemp.jsx",["36"],"import React from 'react'\r\nimport  \"./CityTemp.css\";\r\n\r\nexport default function CityTemp(props) {\r\n    return (\r\n        <div className=\"citySection\">\r\n            <h1 className=\"cityName\"> {props.location} </h1>\r\n            <div className=\"cityTempSection\">\r\n                    <div className=\"col-end\">\r\n                        <img src={props.img} className=\"icon\"/>\r\n                    </div>\r\n                    <div className=\"col-start\">\r\n                \r\n                        <h6> {props.date}</h6>\r\n                        <h6>overcast: {props.overcast}</h6>\r\n                        <h6> feels like: {props.feel}</h6>\r\n                    \r\n                    </div> \r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":40,"column":24,"nodeType":"43","messageId":"44","endLine":40,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":10,"column":25,"nodeType":"47","endLine":10,"endColumn":64},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setHeaderData' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]